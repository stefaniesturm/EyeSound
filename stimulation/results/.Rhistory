for (file in file_list) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")) {
dataset <- read.csv2(file, header = TRUE, sep = "")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")) {
temp_dataset <- read.csv2(file, header = TRUE, sep = "")
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset[, "Correctness"] <-
NA # Add a column for evaluation of responses
dataset
View(dataset)
library(dplyr)
library(ggplot2)
library(ggpubr)
setwd("/home/stefanie/GitHub/EyeSound/results/")
file_list <-
list.files() # Get all files from the results folder (make sure only test files are in there)
# Merge the test files into one dataframe
for (file in file_list) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")) {
dataset <- read.csv2(file, header = TRUE, sep = "")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")) {
temp_dataset <- read.csv2(file, header = TRUE, sep = "")
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset[, "Correctness"] <-
NA # Add a column for evaluation of responses
# Check if response was correct by comparing two columns
for (i in 1:nrow(dataset)) {
dataset[i, "Correctness"] <-
dataset[i, "Congruency"] == dataset[i, "Response"]
}
View(dataset)
# Summarise and plot progession of correct answers by block (learning curve)
blocks <- dataset %>%
filter(Correctness %in% c("TRUE", "FALSE")) %>%
group_by(Block, Correctness) %>%
summarise(counts = n())
blocks$Block <- as.factor(blocks$Block)
# Plot that
p <- ggplot(blocks, aes(fill = Correctness, y = counts, x = Block)) +
geom_bar(position = "dodge", stat = "identity")
print(p + labs(y = "Number of responses"))
# Summarise and plot progession of correct answers by subject
subjects <- dataset %>%
filter(Correctness %in% c("TRUE", "FALSE")) %>%
group_by(Subject, Correctness) %>%
summarise(counts = n())
# Plot that
p <- ggplot(subjects, aes(fill = Correctness, y = counts, x = Subject)) +
geom_bar(position = "dodge", stat = "identity")
print(p + labs(y = "Number of responses"))
View(dataset)
View(blocks)
means <- dataset %>%                            # Specify data frame
group_by(Subject) %>%                         # Specify group indicator
summarise_at(vars(Correctness),              # Specify column
list(name = mean))               # Specify function
View(means)
View(subjects)
means <- dataset %>%                            # Specify data frame
group_by(Subject,Block) %>%                         # Specify group indicator
summarise_at(vars(Correctness),              # Specify column
list(name = mean))               # Specify function
View(means)
means <- dataset %>%                            # Specify data frame
group_by(Subject,Block) %>%                         # Specify group indicator
summarise_at(vars(Correctness),              # Specify column
list(mean = mean))               # Specify function
View(blocks)
View(dataset)
View(subjects)
View(blocks)
# Summarise and plot progession of correct answers by block (learning curve)
counts <- dataset %>%
filter(Correctness %in% c("TRUE", "FALSE")) %>%
group_by(Subject,Block, Correctness) %>%
summarise(counts = n())
counts$Block <- as.factor(blocks$Block)
# Summarise and plot progession of correct answers by block (learning curve)
counts <- dataset %>%
filter(Correctness %in% c("TRUE", "FALSE")) %>%
group_by(Subject,Block, Correctness) %>%
summarise(counts = n())
counts
ggplot(means, aes(fill = Block, y = mean, x = Subject)) +
geom_bar(position = "dodge", stat = "identity")
means$Block <- as.factor(means$Block)
# Plot that
p <- ggplot(blocks, aes(fill = Correctness, y = counts, x = Block)) +
geom_bar(position = "dodge", stat = "identity")
print(p + labs(y = "Number of responses"))
# Summarise and plot progession of correct answers by subject
subjects <- dataset %>%
filter(Correctness %in% c("TRUE", "FALSE")) %>%
group_by(Subject, Correctness) %>%
summarise(counts = n())
# Plot that
p <- ggplot(means, aes(fill = Block, y = mean, x = Subject)) +
geom_bar(position = "dodge", stat = "identity")
print(p + labs(y = "Number of responses"))
# Plot that
p <- ggplot(means, aes(fill = Block, y = mean, x = Subject)) +
geom_line(linetype = "dashed")+
geom_point()
print(p + labs(y = "Number of responses"))
# Plot that
p <- ggplot(means, aes(fill = Subject, y = mean, x = Block)) +
geom_line(linetype = "dashed")+
geom_point()
print(p + labs(y = "Number of responses"))
means$Subject <- as.factor(means$Subject)
# Plot that
p <- ggplot(means, aes(fill = Subject, y = mean, x = Block)) +
geom_line(linetype = "dashed")+
geom_point()
print(p + labs(y = "Number of responses"))
# Plot that
p <- ggplot(means, aes(y = mean, x = Block, group = Subject)) +
geom_line(linetype = "dashed")+
geom_point()
print(p + labs(y = "Number of responses"))
# Plot that
p <- ggplot(means, aes(y = mean, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))
print(p + labs(y = "Hit rate"))
View(subjects)
View(means)
View(dataset)
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
View(dataset)
data_summary(dataset, Correctness, Subject, Block)
df2 <- data_summary(dataset, varname="Correctness",
groupnames=c("Subject", "Block"))
df2
df2$Subject <- as.factor(df2$Subject)
df2$Block <- as.factor(df2$Block)
df2 <- data_summary(dataset, varname="HitRate",
groupnames=c("Subject", "Block"))
df2$Subject <- as.factor(df2$Subject)
df2$Block <- as.factor(df2$Block)
df2
df2 <- data_summary(dataset, varname="Correctness",
groupnames=c("Subject", "Block"))
df2$Subject <- as.factor(df2$Subject)
df2$Block <- as.factor(df2$Block)
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))
print(p + labs(y = "Hit rate"))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p + labs(y = "Hit rate"))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
position=position_dodge(.9))
print(p + labs(y = "Hit rate"))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
position=position_dodge(0.05))
print(p + labs(y = "Hit rate"))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
# geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
#               position=position_dodge(0.05))
print(p + labs(y = "Hit rate"))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
# geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
#               position=position_dodge(0.05))
print(p + labs(y = "Hit rate"))
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))
# Plot that
p <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
# geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
#               position=position_dodge(0.05))
print(p + labs(y = "Hit rate"))
ggplot(df2, aes(x=Block, y=Correctness))
df2
df3 <- data_summary(df2, varname="Correctness", groupnames = "Block")
df3
df3 <- data_summary(df2, varname="Correctness", groupnames = "Block")
df3$Subject <- as.factor(df3$Subject)
df3$Block <- as.factor(df3$Block)
df3$Block <- as.factor(df3$Block)
p<- ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
ggplot(df3, aes(x=Block, y=Correctness))
ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
p<- ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
print(p)
ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", position=position_dodge())
p<- ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
position=position_dodge(.9))
print(p + labs(y = "Hit rate"))
library(dplyr)
library(ggplot2)
library(ggpubr)
setwd("/home/stefanie/GitHub/EyeSound/results/")
file_list <-
list.files() # Get all files from the results folder (make sure only test files are in there)
# Merge the test files into one dataframe
for (file in file_list) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")) {
dataset <- read.csv2(file, header = TRUE, sep = "")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")) {
temp_dataset <- read.csv2(file, header = TRUE, sep = "")
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset[, "Correctness"] <-
NA # Add a column for evaluation of responses
# Check if response was correct by comparing two columns
for (i in 1:nrow(dataset)) {
dataset[i, "Correctness"] <-
dataset[i, "Congruency"] == dataset[i, "Response"]
}
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(dataset, varname="Correctness",
groupnames=c("Subject", "Block"))
df2$Subject <- as.factor(df2$Subject)
df2$Block <- as.factor(df2$Block)
df3 <- data_summary(df2, varname="Correctness", groupnames = "Block")
df3$Block <- as.factor(df3$Block)
# Plot that
p1 <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
print(p1 + labs(y = "Hit rate"))
# Plot that
p1 <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))+
print(p1 + labs(y = "Hit rate"))
# Plot that
p1 <- ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color=Subject))+
geom_point(aes(color=Subject))
print(p1 + labs(y = "Hit rate"))
p2 <- ggplot(df3, aes(x=Block, y=Correctness)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=Correctness-sd, ymax=Correctness+sd), width=.2,
position=position_dodge(.9))
print(p2 + labs(y = "Hit rate"))
source('~/EyeSound_backup/analysis/behavioural_pilot.R')
source('~/EyeSound_backup/analysis/behavioural_pilot.R')
View(dataset)
write.csv(dataset,"/home/stefanie/GitHub/EyeSound/results/dataset.csv", row.names = FALSE)
write.csv(df2,"/home/stefanie/GitHub/EyeSound/results/summary_subjects", row.names = FALSE)
write.csv(df3,"/home/stefanie/GitHub/EyeSound/results/summary_blocks", row.names = FALSE)
write.csv(df2,"/home/stefanie/GitHub/EyeSound/results/summary_subjects.csv", row.names = FALSE)
write.csv(df3,"/home/stefanie/GitHub/EyeSound/results/summary_blocks.csv", row.names = FALSE)
View(df3)
View(dataset)
View(dataset)
dataset$Block[dataset$Block == 2] <- 1
View(dataset)
dataset$Block[dataset$Block == 1] <- LS1
dataset$Block[dataset$Block == 1] <- "LS1""
dataset$Block[dataset$Block == ] <- 1
write.csv(dataset,"/home/stefanie/GitHub/EyeSound/results/dataset.csv", row.names = FALSE)
write.csv(df2,"/home/stefanie/GitHub/EyeSound/results/summary_subjects.csv", row.names = FALSE)
write.csv(df3,"/home/stefanie/GitHub/EyeSound/results/summary_blocks.csv", row.names = FALSE)
dataset$Block[dataset$Block == 1] <- "LS1"
View(dataset)
dataset$Block[dataset$Block == 2] <- "LS1"
dataset$Block[dataset$Block == 3] <- "LS2"
dataset$Block[dataset$Block == 4] <- "LS2"
dataset$Block[dataset$Block == 5] <- "LS3"
dataset$Block[dataset$Block == 6] <- "LS3"
dataset$Block <- as.factor(dataset$Block)
dataset %>%
rename(Blocks = LearningStage,)
dataset %>%
rename(Block = LearningStage,)
dataset %>%
rename(Block = LearningStage)
dataset %>%
rename(LearningStage = Block)
dataset
dataset %>%
rename(LearningStage = Block)
dataset %>%
dplyr::rename(LearningStage = Block)
dataset
View(dataset)
dataset %>%
dplyr::rename(Block = LearningStage)
dataset %>%
dplyr::rename(LearningStage = Block)
setwd("/home/stefanie/GitHub/EyeSound/results/")
file_list <-
list.files() # Get all files from the results folder (make sure only test files are in there)
# Merge the test files into one dataframe
for (file in file_list) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")) {
dataset <- read.csv2(file, header = TRUE, sep = "")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")) {
temp_dataset <- read.csv2(file, header = TRUE, sep = "")
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset[, "Correctness"] <-
NA # Add a column for evaluation of responses
# Check if response was correct by comparing two columns
for (i in 1:nrow(dataset)) {
dataset[i, "Correctness"] <-
dataset[i, "Congruency"] == dataset[i, "Response"]
}
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames) {
require(plyr)
summary_func <- function(x, col) {
c(mean = mean(x[[col]], na.rm = TRUE),
sd = sd(x[[col]], na.rm = TRUE))
}
data_sum <- ddply(data, groupnames, .fun = summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(dataset,
varname = "Correctness",
groupnames = c("Subject", "Block"))
df2$Subject <- as.factor(df2$Subject)
df2$Block <- as.factor(df2$Block)
df3 <-
data_summary(df2, varname = "Correctness", groupnames = "Block")
df3$Block <- as.factor(df3$Block)
# Plot that
p1 <-
ggplot(df2, aes(y = Correctness, x = Block, group = Subject)) +
geom_line(aes(color = Subject)) +
geom_point(aes(color = Subject))
print(p1 + labs(y = "Hit rate"))
p2 <- ggplot(df3, aes(x = Block, y = Correctness)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(
aes(ymin = Correctness - sd, ymax = Correctness + sd),
width = .2,
position = position_dodge(.9)
)
print(p2 + labs(y = "Hit rate"))
df4 <- dataset
df4$Block[df4$Block == 1] <- "LS1"
df4$Block[df4$Block == 2] <- "LS1"
df4$Block[df4$Block == 3] <- "LS2"
df4$Block[df4$Block == 4] <- "LS2"
df4$Block[df4$Block == 5] <- "LS3"
df4$Block[df4$Block == 6] <- "LS3"
df4$Block <- as.factor(df4$Block)
df4 %>%
dplyr::rename(LearningStage = Block)
View(df4)
df4 %>%
dplyr::rename(LearningStage = Block)
View(df4)
df4 %>%
dplyr::rename(LearningStage = Block)
df4 <-
data_summary(df4, varname = "Correctness", groupnames = "LearningStage")
df4
df4 %>%
dplyr::rename(LearningStage = Block)
df4 <- df4 %>%
dplyr::rename(LearningStage = Block)
df4
df4 <-
data_summary(df4, varname = "Correctness", groupnames = "LearningStage")
df4$LearningStage <- as.factor(df4$LearningStage)
View(df4)
p3 <- ggplot(df4, aes(x = LearningStage, y = Correctness)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(
aes(ymin = Correctness - sd, ymax = Correctness + sd),
width = .2,
position = position_dodge(.9)
)
print(p3 + labs(y = "Hit rate"))
View(df4)
print(p3 + labs(y = "Hit rate", x = "Learning stage"))
df5 <-
data_summary(df4, varname = "Correctness", groupnames = c("Subject", "LearningStage"))
df4 <- dataset
df4$Block[df4$Block == 1] <- "LS1"
df4$Block[df4$Block == 2] <- "LS1"
df4$Block[df4$Block == 3] <- "LS2"
df4$Block[df4$Block == 4] <- "LS2"
df4$Block[df4$Block == 5] <- "LS3"
df4$Block[df4$Block == 6] <- "LS3"
df4$Block <- as.factor(df4$Block)
df4 <- df4 %>%
dplyr::rename(LearningStage = Block)
df5 <-
data_summary(df4, varname = "Correctness", groupnames = "LearningStage")
df5$LearningStage <- as.factor(df5$LearningStage)
p3 <- ggplot(df5, aes(x = LearningStage, y = Correctness)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(
aes(ymin = Correctness - sd, ymax = Correctness + sd),
width = .2,
position = position_dodge(.9)
)
print(p3 + labs(y = "Hit rate", x = "Learning stage"))
df6 <-
data_summary(df4, varname = "Correctness", groupnames = c("Subject", "LearningStage"))
df6$LearningStage <- as.factor(df6$LearningStage)
df6$Subject <- as.factor(df6$Subject)
d
df6
p4 <-
ggplot(df6, aes(y = Correctness, x = LearningStage, group = Subject)) +
geom_line(aes(color = Subject)) +
geom_point(aes(color = Subject))
print(p1 + labs(y = "Hit rate", x = "Learning stage"))
print(p4 + labs(y = "Hit rate", x = "Learning stage"))
